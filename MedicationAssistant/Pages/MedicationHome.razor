@page "/Medications"

@inject IMedicationViewModel vm

<h3>Medications</h3>
@*Todo - show load ing icon whilst data is being fetched*@
@if (vm == null)
{
    <span>Loading.....</span>
}
else
{
    <DxDataGrid  Data="@vm.MedicationFullDetails"
                ShowFilterRow="true"
                RowUpdating="@((updatingDataItem, newValues) => vm.OnRowUpdating(updatingDataItem, (Dictionary<string,object>)newValues))"
                RowInserting="@((newValues) => vm.OnRowInserting((Dictionary<string,object>)newValues))"
                InitNewRow="OnInitNewRow"
                ShowPager="true"
                PagerPageSizeSelectorVisible="true"
                PagerAllDataRowsItemVisible="true"
                PagerAllowedPageSizes=@(new int[] {2,10,20,40})
                PagerNavigationMode=PagerNavigationMode.InputBox
                CssClass="mw-1100">

        <DxDataGridCommandColumn Width="150px" DeleteButtonVisible="false" />
        <DxDataGridColumn AllowFilter="true" Field="@nameof(MedicationFullDetail.Name)" />
        <DxDataGridSpinEditColumn Field="@nameof(MedicationFullDetail.Dosage)" Width="100px" />
        <DxDataGridComboBoxColumn Data="@vm.DosageUnit" Field="@nameof(MedicationFullDetail.DosageUnit)" Width="150px">
            <EditTemplate>
                @{
                    var editingContext = (CellEditContext)context;
                    var unit = Enum.GetName(typeof(DosageUnit), (editingContext.GetEditorValue(nameof(MedicationFullDetail.DosageUnit))));
                }
                <DxComboBox Data="@vm.DosageUnit"
                            NullText="Select DosageUnit"
                            Value="@unit"
                            ValueChanged="((string newCellValue) => {
                                    editingContext.OnChanged((Enum.Parse(typeof(DosageUnit),newCellValue)));
                                })">
                </DxComboBox>
            </EditTemplate>
        </DxDataGridComboBoxColumn>
        <DxDataGridSpinEditColumn Field="@nameof(MedicationFullDetail.Quantity)" Width="100px" />
        <DxDataGridSpinEditColumn Field="@nameof(MedicationFullDetail.FrequencyUnit)" Width="100px" />
        <DxDataGridComboBoxColumn Data="@vm.Frequency" Field="@nameof(MedicationFullDetail.Frequency)" Width="150px">
            <EditTemplate>
                @{
                    var editingContext = (CellEditContext)context;
                    var unit = Enum.GetName(typeof(Frequency), (editingContext.GetEditorValue(nameof(MedicationFullDetail.Frequency))));
                }
                <DxComboBox Data="@vm.Frequency"
                            NullText="Select Frequency"
                            Value="@unit"
                            ValueChanged="((string newCellValue) => {
                                    editingContext.OnChanged((Enum.Parse(typeof(Frequency),newCellValue)));
                                })">
                </DxComboBox>
            </EditTemplate>
        </DxDataGridComboBoxColumn>
        <DxDataGridColumn Field="@nameof(MedicationFullDetail.UseDirections)">

        </DxDataGridColumn>
    </DxDataGrid>
}

@code
{    
    protected override async Task OnInitializedAsync() => await vm.LoadData();


    public static Task OnInitNewRow(Dictionary<string, object> values)
    {
        values.Add("Frequency", 1);
        values.Add("DosageUnit", 1);
        return Task.CompletedTask;
    }
}
