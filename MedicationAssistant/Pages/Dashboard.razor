@page "/Dashboard"

@inject IDbContextFactory<MedAstDBContext> dbFactory;
@inject AuthenticationStateProvider AuthenticationStateProvider


<div class="parent">
       <h1 class="title">Dashboard</h1>
      <div class="top-left">box for user details upper left side </div>
    
        <div class="bottom-left">
            <PrescriptionsSmallComponent Prescriptions="@Account.Prescriptions" />
   </div>
        <div class="bottom-right">
            <PrescriptionAlertSmallComponent PrescriptionItemAlerts="@Account.Alerts" />
        </div>
</div>

@code {
    [Parameter]
    public Account Account { get; set; }
    protected override async Task OnInitializedAsync()
    {
        using (var cont = dbFactory.CreateDbContext())
        {
            Account = UserHelper.GetAccount(cont, AuthenticationStateProvider);

            if (Account == null)
            {
               cont.Accounts.Add(Account);
                cont.SaveChanges();
            }
            else
            {
                Account = await new AccountService(dbFactory).GetAccount(Account);
            }
        }
    }
}