@page "/Dashboard"

@inject IDbContextFactory<MedicationAssistantDBContext> dbFactory;
@inject AuthenticationStateProvider AuthenticationStateProvider


<div class="parent">
       <h1 class="title">Dashboard</h1>
      <div class="top-left">box for user details upper left side </div>
    
        <div class="bottom-left">
            <PrescriptionsSmallComponent Prescriptions="@User.Prescriptions" />
   </div>
        <div class="bottom-right">
            <PrescriptionAlertSmallComponent PrescriptionItemAlerts="@User.Alerts" />
        </div>
</div>

@code {
    [Parameter]
    public User User { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using (var cont = dbFactory.CreateDbContext()){
            User = UserService.GetUser(cont,AuthenticationStateProvider);

            if (User == null)
            {
                cont.Users.Add(new User() { Id = User.Id });
                cont.SaveChanges();
            }
            else
            {
                User.Alerts = await new AlertService().GetPrescriptionItemAlerts(cont, User.Id);              
                User.Prescriptions = await new PrescriptionService().GetRequiredAmountFullPrescriptions(cont,User.Id);
            }
        }
    }
}